namespace cvc5

/-- Identifiers for DSL proof rules -/
inductive RewriteRule where
  | FAIL
  | REFL
  | EVAL
  -- the following rules can be generated temporarily during reconstruction
  | TRANS
  | CONG
  | CONG_EVAL
  | TRUE_ELIM
  | TRUE_INTRO
  | ARITH_POLY_NORM
  | ACI_NORM
  -- Generated rule ids
  | ARITH_PLUS_ZERO
  | ARITH_MUL_ONE
  | ARITH_MUL_ZERO
  | ARITH_INT_DIV_ONE
  | ARITH_NEG_NEG_ONE
  | ARITH_ELIM_UMINUS
  | ARITH_ELIM_MINUS
  | ARITH_ELIM_GT
  | ARITH_ELIM_LT
  | ARITH_ELIM_LEQ
  | ARITH_LEQ_NORM
  | ARITH_GEQ_TIGHTEN
  | ARITH_GEQ_NORM
  | ARITH_REFL_LEQ
  | ARITH_REFL_LT
  | ARITH_REFL_GEQ
  | ARITH_REFL_GT
  | ARITH_PLUS_FLATTEN
  | ARITH_MULT_FLATTEN
  | ARITH_MULT_DIST
  | ARITH_PLUS_CANCEL1
  | ARITH_PLUS_CANCEL2
  | ARRAY_READ_OVER_WRITE
  | ARRAY_READ_OVER_WRITE2
  | ARRAY_STORE_OVERWRITE
  | ARRAY_STORE_SELF
  | BOOL_DOUBLE_NOT_ELIM
  | BOOL_EQ_TRUE
  | BOOL_EQ_FALSE
  | BOOL_EQ_NREFL
  | BOOL_IMPL_FALSE1
  | BOOL_IMPL_FALSE2
  | BOOL_IMPL_TRUE1
  | BOOL_IMPL_TRUE2
  | BOOL_IMPL_ELIM
  | BOOL_OR_TRUE
  | BOOL_OR_FALSE
  | BOOL_OR_FLATTEN
  | BOOL_OR_DUP
  | BOOL_AND_TRUE
  | BOOL_AND_FALSE
  | BOOL_AND_FLATTEN
  | BOOL_AND_DUP
  | BOOL_AND_CONF
  | BOOL_OR_TAUT
  | BOOL_XOR_REFL
  | BOOL_XOR_NREFL
  | BOOL_XOR_FALSE
  | BOOL_XOR_TRUE
  | BOOL_XOR_COMM
  | BOOL_XOR_ELIM
  | ITE_NEG_BRANCH
  | ITE_THEN_TRUE
  | ITE_ELSE_FALSE
  | ITE_THEN_FALSE
  | ITE_ELSE_TRUE
  | ITE_THEN_LOOKAHEAD_SELF
  | ITE_ELSE_LOOKAHEAD_SELF
  | ITE_TRUE_COND
  | ITE_FALSE_COND
  | ITE_NOT_COND
  | ITE_EQ_BRANCH
  | ITE_THEN_LOOKAHEAD
  | ITE_ELSE_LOOKAHEAD
  | ITE_THEN_NEG_LOOKAHEAD
  | ITE_ELSE_NEG_LOOKAHEAD
  | BV_CONCAT_FLATTEN
  | BV_CONCAT_EXTRACT_MERGE
  | BV_EXTRACT_EXTRACT
  | BV_EXTRACT_WHOLE
  | BV_EXTRACT_CONCAT_1
  | BV_EXTRACT_CONCAT_2
  | BV_EXTRACT_CONCAT_3
  | BV_EXTRACT_CONCAT_4
  | BV_EXTRACT_BITWISE_AND
  | BV_EXTRACT_BITWISE_OR
  | BV_EXTRACT_BITWISE_XOR
  | BV_EXTRACT_NOT
  | BV_EXTRACT_SIGN_EXTEND_1
  | BV_EXTRACT_SIGN_EXTEND_2
  | BV_EXTRACT_SIGN_EXTEND_3
  | BV_NEG_MULT
  | BV_NEG_ADD
  | BV_MULT_DISTRIB_CONST_NEG
  | BV_MULT_DISTRIB_CONST_ADD
  | BV_MULT_DISTRIB_CONST_SUB
  | BV_MULT_DISTRIB_1
  | BV_MULT_DISTRIB_2
  | BV_NOT_XOR
  | BV_AND_SIMPLIFY_1
  | BV_AND_SIMPLIFY_2
  | BV_OR_SIMPLIFY_1
  | BV_OR_SIMPLIFY_2
  | BV_XOR_SIMPLIFY_1
  | BV_XOR_SIMPLIFY_2
  | BV_XOR_SIMPLIFY_3
  | BV_ULT_ADD_ONE
  | BV_CONCAT_TO_MULT
  | BV_MULT_SLT_MULT_1
  | BV_MULT_SLT_MULT_2
  | BV_COMMUTATIVE_AND
  | BV_COMMUTATIVE_OR
  | BV_COMMUTATIVE_XOR
  | BV_COMMUTATIVE_MUL
  | BV_OR_ZERO
  | BV_MUL_ONE
  | BV_MUL_ZERO
  | BV_ADD_ZERO
  | BV_ADD_TWO
  | BV_ZERO_EXTEND_ELIMINATE_0
  | BV_SIGN_EXTEND_ELIMINATE_0
  | BV_NOT_NEQ
  | BV_ULT_ONES
  | BV_OR_FLATTEN
  | BV_XOR_FLATTEN
  | BV_AND_FLATTEN
  | BV_MUL_FLATTEN
  | BV_CONCAT_MERGE_CONST
  | BV_COMMUTATIVE_ADD
  | BV_NEG_SUB
  | BV_NEG_IDEMP
  | BV_SUB_ELIMINATE
  | BV_UGT_ELIMINATE
  | BV_UGE_ELIMINATE
  | BV_SGT_ELIMINATE
  | BV_SGE_ELIMINATE
  | BV_SLT_ELIMINATE
  | BV_SLE_ELIMINATE
  | BV_REDOR_ELIMINATE
  | BV_REDAND_ELIMINATE
  | BV_ULE_ELIMINATE
  | BV_COMP_ELIMINATE
  | BV_REPEAT_ELIMINATE_1
  | BV_REPEAT_ELIMINATE_2
  | BV_ROTATE_LEFT_ELIMINATE_1
  | BV_ROTATE_LEFT_ELIMINATE_2
  | BV_ROTATE_RIGHT_ELIMINATE_1
  | BV_ROTATE_RIGHT_ELIMINATE_2
  | BV_NAND_ELIMINATE
  | BV_NOR_ELIMINATE
  | BV_XNOR_ELIMINATE
  | BV_SDIV_ELIMINATE
  | BV_SDIV_ELIMINATE_FEWER_BITWISE_OPS
  | BV_ZERO_EXTEND_ELIMINATE
  | BV_SIGN_EXTEND_ELIMINATE
  | BV_UADDO_ELIMINATE
  | BV_SADDO_ELIMINATE
  | BV_SDIVO_ELIMINATE
  | BV_SMOD_ELIMINATE
  | BV_SMOD_ELIMINATE_FEWER_BITWISE_OPS
  | BV_SREM_ELIMINATE
  | BV_SREM_ELIMINATE_FEWER_BITWISE_OPS
  | BV_USUBO_ELIMINATE
  | BV_SSUBO_ELIMINATE
  | BV_ITE_EQUAL_CHILDREN
  | BV_ITE_CONST_CHILDREN_1
  | BV_ITE_CONST_CHILDREN_2
  | BV_ITE_EQUAL_COND_1
  | BV_ITE_EQUAL_COND_2
  | BV_ITE_EQUAL_COND_3
  | BV_ITE_MERGE_THEN_IF
  | BV_ITE_MERGE_ELSE_IF
  | BV_ITE_MERGE_THEN_ELSE
  | BV_ITE_MERGE_ELSE_ELSE
  | BV_SHL_BY_CONST_0
  | BV_SHL_BY_CONST_1
  | BV_SHL_BY_CONST_2
  | BV_LSHR_BY_CONST_0
  | BV_LSHR_BY_CONST_1
  | BV_LSHR_BY_CONST_2
  | BV_ASHR_BY_CONST_0
  | BV_ASHR_BY_CONST_1
  | BV_ASHR_BY_CONST_2
  | BV_AND_CONCAT_PULLUP
  | BV_OR_CONCAT_PULLUP
  | BV_XOR_CONCAT_PULLUP
  | BV_BITWISE_IDEMP_1
  | BV_BITWISE_IDEMP_2
  | BV_AND_ZERO
  | BV_AND_ONE
  | BV_OR_ONE
  | BV_XOR_DUPLICATE
  | BV_XOR_ONES
  | BV_XOR_ZERO
  | BV_BITWISE_NOT_AND
  | BV_BITWISE_NOT_OR
  | BV_XOR_NOT
  | BV_NOT_IDEMP
  | BV_ULT_ZERO_1
  | BV_ULT_ZERO_2
  | BV_ULT_SELF
  | BV_LT_SELF
  | BV_ULE_SELF
  | BV_ULE_ZERO
  | BV_ZERO_ULE
  | BV_SLE_SELF
  | BV_ULE_MAX
  | BV_NOT_ULT
  | BV_NOT_ULE
  | BV_NOT_SLE
  | BV_MULT_POW2_1
  | BV_MULT_POW2_2
  | BV_MULT_POW2_2B
  | BV_EXTRACT_MULT_LEADING_BIT
  | BV_UDIV_POW2_NOT_ONE
  | BV_UDIV_ZERO
  | BV_UDIV_ONE
  | BV_UREM_POW2_NOT_ONE
  | BV_UREM_ONE
  | BV_UREM_SELF
  | BV_SHL_ZERO
  | BV_LSHR_ZERO
  | BV_ASHR_ZERO
  | BV_UGT_UREM
  | BV_ULT_ONE
  | BV_SLT_ZERO
  | BV_MERGE_SIGN_EXTEND_1
  | BV_MERGE_SIGN_EXTEND_2
  | BV_MERGE_SIGN_EXTEND_3
  | BV_SIGN_EXTEND_EQ_CONST_1
  | BV_SIGN_EXTEND_EQ_CONST_2
  | BV_ZERO_EXTEND_EQ_CONST_1
  | BV_ZERO_EXTEND_EQ_CONST_2
  | BV_ZERO_EXTEND_ULT_CONST_1
  | BV_ZERO_EXTEND_ULT_CONST_2
  | BV_SIGN_EXTEND_ULT_CONST_1
  | BV_SIGN_EXTEND_ULT_CONST_2
  | BV_SIGN_EXTEND_ULT_CONST_3
  | BV_SIGN_EXTEND_ULT_CONST_4
  | SETS_MEMBER_SINGLETON
  | SETS_SUBSET_ELIM
  | SETS_UNION_COMM
  | SETS_INTER_COMM
  | SETS_INTER_MEMBER
  | SETS_MINUS_MEMBER
  | SETS_UNION_MEMBER
  | STR_EQ_CTN_FALSE
  | STR_CONCAT_FLATTEN
  | STR_CONCAT_FLATTEN_EQ
  | STR_CONCAT_FLATTEN_EQ_REV
  | STR_SUBSTR_EMPTY_STR
  | STR_SUBSTR_EMPTY_RANGE
  | STR_SUBSTR_EMPTY_START
  | STR_SUBSTR_EMPTY_START_NEG
  | STR_SUBSTR_EQ_EMPTY
  | STR_LEN_REPLACE_INV
  | STR_LEN_UPDATE_INV
  | STR_LEN_SUBSTR_IN_RANGE
  | STR_LEN_SUBSTR_UB1
  | STR_LEN_SUBSTR_UB2
  | RE_IN_EMPTY
  | RE_IN_SIGMA
  | RE_IN_SIGMA_STAR
  | RE_IN_CSTRING
  | RE_IN_COMP
  | STR_CONCAT_CLASH
  | STR_CONCAT_CLASH_REV
  | STR_CONCAT_CLASH2
  | STR_CONCAT_CLASH2_REV
  | STR_CONCAT_UNIFY
  | STR_CONCAT_UNIFY_REV
  | STR_CONCAT_CLASH_CHAR
  | STR_CONCAT_CLASH_CHAR_REV
  | STR_PREFIXOF_ELIM
  | STR_SUFFIXOF_ELIM
  | STR_PREFIXOF_ONE
  | STR_SUFFIXOF_ONE
  | STR_SUBSTR_COMBINE1
  | STR_SUBSTR_COMBINE2
  | STR_SUBSTR_CONCAT1
  | STR_SUBSTR_FULL
  | STR_CONTAINS_REFL
  | STR_CONTAINS_CONCAT_FIND
  | STR_CONTAINS_SPLIT_CHAR
  | STR_CONTAINS_LEQ_LEN_EQ
  | STR_CONCAT_EMP
  | STR_AT_ELIM
  | RE_ALL_ELIM
  | RE_OPT_ELIM
  | RE_CONCAT_EMP
  | RE_CONCAT_NONE
  | RE_CONCAT_FLATTEN
  | RE_CONCAT_STAR_SWAP
  | RE_UNION_ALL
  | RE_UNION_NONE
  | RE_UNION_FLATTEN
  | RE_UNION_DUP
  | RE_INTER_ALL
  | RE_INTER_NONE
  | RE_INTER_FLATTEN
  | RE_INTER_DUP
  | STR_LEN_CONCAT_REC
  | STR_IN_RE_RANGE_ELIM
  | SEQ_LEN_UNIT
  | SEQ_NTH_UNIT
  | SEQ_REV_UNIT
  | EQ_REFL
  | EQ_SYMM
  | DISTINCT_BINARY_ELIM
deriving BEq, Hashable, Inhabited, Repr

namespace RewriteRule

def numOfCtors := RewriteRule.toCtorIdx DISTINCT_BINARY_ELIM + 1

@[extern "rewriterule_fromNat"]
opaque fromNat (n : Nat) : n < numOfCtors â†’ RewriteRule

protected def fromNat! (n : Nat) : RewriteRule :=
  if h : n < numOfCtors then
    fromNat n h
  else
    panic! s!"{n} is not less than {numOfCtors}"

end cvc5.RewriteRule
